<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_cph_sec_1202</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_cph_sec_1202">route_numberISNOTEMPTY^company_calledISNOTEMPTY^EQ<item endquery="false" field="route_number" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="company_called" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Fill out call on same Flights routes</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	/*
		Business rule is to help handlers only fill out 1 datetime for muliple luggage picked
	*/

	
	/*
	* gs.beginningOfToday returns UTC date. sad
	* So, first we need to convert UTC datetime to CET
	*/
	var gdt = new GlideDateTime();
	gdt.setValue(gs.beginningOfToday());
	var datetimelol = new DatetimeUtil(gdt);
	datetimelol.setTimeZone('Europe/Copenhagen');

	/*
	* And now we can query correct. :-)
	*/

	var gr = new GlideRecord('x_cph_sec_1202');
	gr.addQuery('sys_created_on', '>=', gdt.getDisplayValue());
	gr.addEncodedQuery('company_calledISEMPTY^route_number=' + current.route_number + '^handler=' + current.handler);
	gr.query();
	while(gr.next()) {
		gr.autoSysFields(false);
		gr.company_called = current.company_called;
		gr.update();
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>bnow-ph</sys_created_by>
        <sys_created_on>2018-08-23 12:59:41</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>b57d33560fcc2300c4ccc9cce1050e48</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>Fill out call on same Flights routes</sys_name>
        <sys_overrides/>
        <sys_package display_value="CPH SEC" source="x_cph_sec">ce7268634f211300656e417da310c780</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="CPH SEC">ce7268634f211300656e417da310c780</sys_scope>
        <sys_update_name>sys_script_b57d33560fcc2300c4ccc9cce1050e48</sys_update_name>
        <sys_updated_by>bnow-ph</sys_updated_by>
        <sys_updated_on>2018-08-27 15:30:04</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
